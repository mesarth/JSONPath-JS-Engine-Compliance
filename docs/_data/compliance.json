{"engines":[{"id":"JSONPath-Plus/JSONPath","name":"JSONPath Plus"},{"id":"atamano/jsonpathly","name":"jsonpathly"},{"id":"AndyA/jsonpath-faster","name":"jsonpath-faster"},{"id":"brunerd/jsonpath","name":"brunerd JSONPath"}],"results":[{"testName":"basic, root","engineCompliance":[true,true,true,true]},{"testName":"basic, name shorthand","engineCompliance":[true,true,true,true]},{"testName":"basic, name shorthand, extended unicode ☺","engineCompliance":[true,true,false,false]},{"testName":"basic, name shorthand, underscore","engineCompliance":[true,true,true,true]},{"testName":"basic, name shorthand, absent data","engineCompliance":[true,true,true,true]},{"testName":"basic, name shorthand, array data","engineCompliance":[true,true,true,true]},{"testName":"basic, wildcard shorthand, object data","engineCompliance":[true,true,true,true]},{"testName":"basic, wildcard shorthand, array data","engineCompliance":[true,true,true,true]},{"testName":"basic, wildcard selector, array data","engineCompliance":[true,true,true,true]},{"testName":"basic, wildcard shorthand, then name shorthand","engineCompliance":[true,true,true,true]},{"testName":"basic, multiple selectors","engineCompliance":[true,true,true,true]},{"testName":"basic, multiple selectors, name and index, array data","engineCompliance":[true,false,true,true]},{"testName":"basic, multiple selectors, name and index, object data","engineCompliance":[false,false,true,true]},{"testName":"basic, multiple selectors, index and slice","engineCompliance":[true,false,true,true]},{"testName":"basic, multiple selectors, index and slice, overlapping","engineCompliance":[true,false,true,true]},{"testName":"basic, multiple selectors, duplicate index","engineCompliance":[true,true,true,true]},{"testName":"basic, multiple selectors, wildcard and index","engineCompliance":[true,false,false,true]},{"testName":"basic, multiple selectors, wildcard and name","engineCompliance":[false,false,false,true]},{"testName":"basic, multiple selectors, wildcard and slice","engineCompliance":[true,false,false,true]},{"testName":"basic, multiple selectors, multiple wildcards","engineCompliance":[true,false,false,true]},{"testName":"basic, descendant segment, index","engineCompliance":[true,true,true,true]},{"testName":"basic, descendant segment, name shorthand","engineCompliance":[true,true,true,true]},{"testName":"basic, descendant segment, wildcard shorthand, array data","engineCompliance":[true,true,true,true]},{"testName":"basic, descendant segment, wildcard selector, array data","engineCompliance":[true,true,true,true]},{"testName":"basic, descendant segment, wildcard shorthand, object data","engineCompliance":[true,true,true,true]},{"testName":"basic, descendant segment, wildcard shorthand, nested data","engineCompliance":[true,true,true,true]},{"testName":"basic, descendant segment, multiple selectors","engineCompliance":[false,true,true,true]},{"testName":"filter, existence","engineCompliance":[false,false,false,false]},{"testName":"filter, existence, present with null","engineCompliance":[false,false,false,false]},{"testName":"filter, equals string, single quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, equals numeric string, single quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, equals string, double quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, equals numeric string, double quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number","engineCompliance":[false,false,false,false]},{"testName":"filter, equals null","engineCompliance":[false,false,false,false]},{"testName":"filter, equals null, absent from data","engineCompliance":[true,true,false,false]},{"testName":"filter, equals true","engineCompliance":[false,false,false,false]},{"testName":"filter, equals false","engineCompliance":[false,false,false,false]},{"testName":"filter, deep equality, arrays","engineCompliance":[false,false,false,false]},{"testName":"filter, deep equality, objects","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals string, single quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals numeric string, single quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals string, single quotes, different type","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals string, double quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals numeric string, double quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals string, double quotes, different types","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals number","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals number, different types","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals null","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals null, absent from data","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals true","engineCompliance":[false,false,false,false]},{"testName":"filter, not-equals false","engineCompliance":[false,false,false,false]},{"testName":"filter, less than string, single quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, less than string, double quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, less than number","engineCompliance":[false,false,false,false]},{"testName":"filter, less than null","engineCompliance":[true,true,false,false]},{"testName":"filter, less than true","engineCompliance":[true,true,false,false]},{"testName":"filter, less than false","engineCompliance":[true,true,false,false]},{"testName":"filter, less than or equal to string, single quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, less than or equal to string, double quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, less than or equal to number","engineCompliance":[false,false,false,false]},{"testName":"filter, less than or equal to null","engineCompliance":[false,false,false,false]},{"testName":"filter, less than or equal to true","engineCompliance":[false,false,false,false]},{"testName":"filter, less than or equal to false","engineCompliance":[false,false,false,false]},{"testName":"filter, greater than string, single quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, greater than string, double quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, greater than number","engineCompliance":[false,false,false,false]},{"testName":"filter, greater than null","engineCompliance":[true,true,false,false]},{"testName":"filter, greater than true","engineCompliance":[true,true,false,false]},{"testName":"filter, greater than false","engineCompliance":[true,true,false,false]},{"testName":"filter, greater than or equal to string, single quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, greater than or equal to string, double quotes","engineCompliance":[false,false,false,false]},{"testName":"filter, greater than or equal to number","engineCompliance":[false,false,false,false]},{"testName":"filter, greater than or equal to null","engineCompliance":[false,false,false,false]},{"testName":"filter, greater than or equal to true","engineCompliance":[false,false,false,false]},{"testName":"filter, greater than or equal to false","engineCompliance":[false,false,false,false]},{"testName":"filter, exists and not-equals null, absent from data","engineCompliance":[false,false,false,false]},{"testName":"filter, and","engineCompliance":[false,false,false,false]},{"testName":"filter, or","engineCompliance":[false,false,false,false]},{"testName":"filter, not expression","engineCompliance":[false,false,false,false]},{"testName":"filter, not exists","engineCompliance":[false,false,false,false]},{"testName":"filter, not exists, data null","engineCompliance":[false,false,false,false]},{"testName":"filter, nested","engineCompliance":[false,false,false,false]},{"testName":"filter, multiple selectors","engineCompliance":[false,false,false,false]},{"testName":"filter, multiple selectors, comparison","engineCompliance":[false,false,false,false]},{"testName":"filter, multiple selectors, overlapping","engineCompliance":[false,false,false,false]},{"testName":"filter, multiple selectors, filter and index","engineCompliance":[false,false,false,false]},{"testName":"filter, multiple selectors, filter and wildcard","engineCompliance":[false,false,false,false]},{"testName":"filter, multiple selectors, filter and slice","engineCompliance":[false,false,false,false]},{"testName":"filter, multiple selectors, comparison filter, index and slice","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number, zero and negative zero","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number, with and without decimal fraction","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number, exponent","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number, positive exponent","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number, negative exponent","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number, decimal fraction","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number, decimal fraction, exponent","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number, decimal fraction, positive exponent","engineCompliance":[false,false,false,false]},{"testName":"filter, equals number, decimal fraction, negative exponent","engineCompliance":[false,false,false,false]},{"testName":"index selector, first element","engineCompliance":[true,true,true,true]},{"testName":"index selector, second element","engineCompliance":[true,true,true,true]},{"testName":"index selector, out of bound","engineCompliance":[true,true,true,true]},{"testName":"index selector, negative","engineCompliance":[false,true,false,true]},{"testName":"index selector, more negative","engineCompliance":[false,true,false,true]},{"testName":"index selector, negative out of bound","engineCompliance":[true,true,true,true]},{"testName":"index selector, on object","engineCompliance":[true,true,true,true]},{"testName":"name selector, double quotes","engineCompliance":[true,true,true,true]},{"testName":"name selector, double quotes, absent data","engineCompliance":[true,true,true,true]},{"testName":"name selector, double quotes, array data","engineCompliance":[true,true,true,true]},{"testName":"name selector, double quotes, embedded U+0020","engineCompliance":[true,true,true,true]},{"testName":"name selector, double quotes, escaped double quote","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, escaped reverse solidus","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, escaped solidus","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, escaped backspace","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, escaped form feed","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, escaped line feed","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, escaped carriage return","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, escaped tab","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, escaped ☺, upper case hex","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, escaped ☺, lower case hex","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, surrogate pair 𝄞","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, surrogate pair 😀","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes","engineCompliance":[true,true,true,true]},{"testName":"name selector, single quotes, absent data","engineCompliance":[true,true,true,true]},{"testName":"name selector, single quotes, array data","engineCompliance":[true,true,true,true]},{"testName":"name selector, single quotes, embedded U+0020","engineCompliance":[true,true,true,true]},{"testName":"name selector, single quotes, escaped single quote","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, escaped reverse solidus","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, escaped solidus","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, escaped backspace","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, escaped form feed","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, escaped line feed","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, escaped carriage return","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, escaped tab","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, escaped ☺, upper case hex","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, escaped ☺, lower case hex","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, surrogate pair 𝄞","engineCompliance":[false,false,false,true]},{"testName":"name selector, single quotes, surrogate pair 😀","engineCompliance":[false,false,false,true]},{"testName":"name selector, double quotes, empty","engineCompliance":[true,true,true,true]},{"testName":"name selector, single quotes, empty","engineCompliance":[true,true,true,true]},{"testName":"slice selector, slice selector","engineCompliance":[true,true,true,true]},{"testName":"slice selector, slice selector with step","engineCompliance":[true,true,true,true]},{"testName":"slice selector, slice selector with everything omitted, short form","engineCompliance":[true,true,true,true]},{"testName":"slice selector, slice selector with everything omitted, long form","engineCompliance":[true,true,true,true]},{"testName":"slice selector, slice selector with start omitted","engineCompliance":[true,true,true,true]},{"testName":"slice selector, slice selector with start and end omitted","engineCompliance":[true,true,true,true]},{"testName":"slice selector, negative step with default start and end","engineCompliance":[false,false,true,true]},{"testName":"slice selector, negative step with default start","engineCompliance":[false,false,true,true]},{"testName":"slice selector, negative step with default end","engineCompliance":[false,false,true,true]},{"testName":"slice selector, larger negative step","engineCompliance":[false,false,true,true]},{"testName":"slice selector, negative range with default step","engineCompliance":[true,true,true,true]},{"testName":"slice selector, negative range with negative step","engineCompliance":[false,false,true,true]},{"testName":"slice selector, negative range with larger negative step","engineCompliance":[false,false,true,true]},{"testName":"slice selector, larger negative range with larger negative step","engineCompliance":[false,false,true,true]},{"testName":"slice selector, negative from, positive to","engineCompliance":[true,true,true,true]},{"testName":"slice selector, negative from","engineCompliance":[true,true,true,true]},{"testName":"slice selector, positive from, negative to","engineCompliance":[true,true,true,true]},{"testName":"slice selector, negative from, positive to, negative step","engineCompliance":[false,false,true,true]},{"testName":"slice selector, positive from, negative to, negative step","engineCompliance":[false,false,true,true]},{"testName":"slice selector, zero step","engineCompliance":[false,false,false,false]},{"testName":"slice selector, empty range","engineCompliance":[true,true,true,true]},{"testName":"slice selector, slice selector with everything omitted with empty array","engineCompliance":[true,true,true,true]},{"testName":"slice selector, negative step with empty array","engineCompliance":[true,true,true,true]},{"testName":"slice selector, maximal range with positive step","engineCompliance":[true,true,true,true]},{"testName":"slice selector, maximal range with negative step","engineCompliance":[false,false,true,true]},{"testName":"slice selector, excessively large to value","engineCompliance":[true,true,true,true]},{"testName":"slice selector, excessively small from value","engineCompliance":[true,true,true,true]},{"testName":"slice selector, excessively large from value with negative step","engineCompliance":[false,false,true,true]},{"testName":"slice selector, excessively small to value with negative step","engineCompliance":[false,false,true,true]},{"testName":"slice selector, excessively large step","engineCompliance":[true,true,true,true]},{"testName":"slice selector, excessively small step","engineCompliance":[false,false,true,true]},{"testName":"functions, count, count function","engineCompliance":[false,false,false,false]},{"testName":"functions, count, single-node arg","engineCompliance":[true,true,false,false]},{"testName":"functions, count, multiple-selector arg","engineCompliance":[false,false,false,false]},{"testName":"functions, length, string data","engineCompliance":[false,false,false,false]},{"testName":"functions, length, string data, unicode","engineCompliance":[false,false,false,false]},{"testName":"functions, length, array data","engineCompliance":[false,false,false,false]},{"testName":"functions, length, missing data","engineCompliance":[true,true,false,false]},{"testName":"functions, length, number arg","engineCompliance":[true,true,false,false]},{"testName":"functions, length, true arg","engineCompliance":[true,true,false,false]},{"testName":"functions, length, false arg","engineCompliance":[true,true,false,false]},{"testName":"functions, length, null arg","engineCompliance":[true,true,false,false]},{"testName":"functions, match, found match","engineCompliance":[false,false,false,false]},{"testName":"functions, match, double quotes","engineCompliance":[false,false,false,false]},{"testName":"functions, match, regex from the document","engineCompliance":[false,false,false,false]},{"testName":"functions, match, don't select match","engineCompliance":[true,true,false,false]},{"testName":"functions, match, not a match","engineCompliance":[true,true,false,false]},{"testName":"functions, match, select non-match","engineCompliance":[false,false,false,false]},{"testName":"functions, match, non-string first arg","engineCompliance":[true,true,false,false]},{"testName":"functions, match, non-string second arg","engineCompliance":[true,true,false,false]},{"testName":"functions, match, filter, match function, unicode char class, uppercase","engineCompliance":[false,false,false,false]},{"testName":"functions, match, filter, match function, unicode char class negated, uppercase","engineCompliance":[false,false,false,false]},{"testName":"functions, match, filter, match function, unicode, surrogate pair","engineCompliance":[false,false,false,false]},{"testName":"functions, search, at the end","engineCompliance":[false,false,false,false]},{"testName":"functions, search, double quotes","engineCompliance":[false,false,false,false]},{"testName":"functions, search, at the start","engineCompliance":[false,false,false,false]},{"testName":"functions, search, in the middle","engineCompliance":[false,false,false,false]},{"testName":"functions, search, regex from the document","engineCompliance":[false,false,false,false]},{"testName":"functions, search, don't select match","engineCompliance":[true,true,false,false]},{"testName":"functions, search, not a match","engineCompliance":[true,true,false,false]},{"testName":"functions, search, select non-match","engineCompliance":[false,false,false,false]},{"testName":"functions, search, non-string first arg","engineCompliance":[true,true,false,false]},{"testName":"functions, search, non-string second arg","engineCompliance":[true,true,false,false]},{"testName":"functions, search, filter, search function, unicode char class, uppercase","engineCompliance":[false,false,false,false]},{"testName":"functions, search, filter, search function, unicode char class negated, uppercase","engineCompliance":[false,false,false,false]},{"testName":"functions, search, filter, search function, unicode, surrogate pair","engineCompliance":[false,false,false,false]},{"testName":"functions, value, single-value nodelist","engineCompliance":[false,false,false,false]},{"testName":"functions, value, multi-value nodelist","engineCompliance":[true,true,false,false]},{"testName":"whitespace, filter, space between question mark and expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, filter, newline between question mark and expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, filter, tab between question mark and expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, filter, return between question mark and expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, filter, space between question mark and parenthesized expression","engineCompliance":[false,true,false,false]},{"testName":"whitespace, filter, newline between question mark and parenthesized expression","engineCompliance":[false,true,false,false]},{"testName":"whitespace, filter, tab between question mark and parenthesized expression","engineCompliance":[false,true,false,false]},{"testName":"whitespace, filter, return between question mark and parenthesized expression","engineCompliance":[false,true,false,false]},{"testName":"whitespace, filter, space between parenthesized expression and bracket","engineCompliance":[false,true,false,true]},{"testName":"whitespace, filter, newline between parenthesized expression and bracket","engineCompliance":[false,true,false,true]},{"testName":"whitespace, filter, tab between parenthesized expression and bracket","engineCompliance":[false,true,false,true]},{"testName":"whitespace, filter, return between parenthesized expression and bracket","engineCompliance":[false,true,false,true]},{"testName":"whitespace, filter, space between bracket and question mark","engineCompliance":[false,false,false,false]},{"testName":"whitespace, filter, newline between bracket and question mark","engineCompliance":[false,false,false,false]},{"testName":"whitespace, filter, tab between bracket and question mark","engineCompliance":[false,false,false,false]},{"testName":"whitespace, filter, return between bracket and question mark","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, space between parenthesis and arg","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, newline between parenthesis and arg","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, tab between parenthesis and arg","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, return between parenthesis and arg","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, space between arg and comma","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, newline between arg and comma","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, tab between arg and comma","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, return between arg and comma","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, space between comma and arg","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, newline between comma and arg","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, tab between comma and arg","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, return between comma and arg","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, space between arg and parenthesis","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, newline between arg and parenthesis","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, tab between arg and parenthesis","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, return between arg and parenthesis","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, spaces in a relative singular selector","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, newlines in a relative singular selector","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, tabs in a relative singular selector","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, returns in a relative singular selector","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, spaces in an absolute singular selector","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, newlines in an absolute singular selector","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, tabs in an absolute singular selector","engineCompliance":[false,false,false,false]},{"testName":"whitespace, functions, returns in an absolute singular selector","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space before ||","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline before ||","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab before ||","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return before ||","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space after ||","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline after ||","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab after ||","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return after ||","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space before &&","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline before &&","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab before &&","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return before &&","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space after &&","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline after &&","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab after &&","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return after &&","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space before ==","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline before ==","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab before ==","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return before ==","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space after ==","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline after ==","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab after ==","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return after ==","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space before !=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline before !=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab before !=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return before !=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space after !=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline after !=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab after !=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return after !=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space before <","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline before <","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab before <","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return before <","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space after <","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline after <","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab after <","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return after <","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space before >","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline before >","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab before >","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return before >","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space after >","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline after >","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab after >","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return after >","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space before <=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline before <=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab before <=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return before <=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space after <=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline after <=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab after <=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return after <=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space before >=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline before >=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab before >=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return before >=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space after >=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline after >=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab after >=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return after >=","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space between logical not and test expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline between logical not and test expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab between logical not and test expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return between logical not and test expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, space between logical not and parenthesized expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, newline between logical not and parenthesized expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, tab between logical not and parenthesized expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, operators, return between logical not and parenthesized expression","engineCompliance":[false,false,false,false]},{"testName":"whitespace, selectors, space between root and bracket","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, newline between root and bracket","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, tab between root and bracket","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, return between root and bracket","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, space between bracket and bracket","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, newline between root and bracket","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, tab between root and bracket","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, return between root and bracket","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, space between root and dot","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, newline between root and dot","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, tab between root and dot","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, return between root and dot","engineCompliance":[false,true,false,false]},{"testName":"whitespace, selectors, space between bracket and selector","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, newline between bracket and selector","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, tab between bracket and selector","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, return between bracket and selector","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, space between selector and bracket","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, newline between selector and bracket","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, tab between selector and bracket","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, return between selector and bracket","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, space between selector and comma","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, newline between selector and comma","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, tab between selector and comma","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, return between selector and comma","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, space between comma and selector","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, newline between comma and selector","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, tab between comma and selector","engineCompliance":[false,true,false,true]},{"testName":"whitespace, selectors, return between comma and selector","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, space between start and colon","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, newline between start and colon","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, tab between start and colon","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, return between start and colon","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, space between colon and end","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, newline between colon and end","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, tab between colon and end","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, return between colon and end","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, space between end and colon","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, newline between end and colon","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, tab between end and colon","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, return between end and colon","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, space between colon and step","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, newline between colon and step","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, tab between colon and step","engineCompliance":[false,true,false,true]},{"testName":"whitespace, slice, return between colon and step","engineCompliance":[false,true,false,true]}],"summary":[{"testType":null,"percentages":[0.21428571428571427,0.3489010989010989,0.18406593406593408,0.36538461538461536]},{"testType":"basic","percentages":[0.8888888888888888,0.7037037037037037,0.8148148148148148,0.9629629629629629]},{"testType":"filter","percentages":[0.09722222222222222,0.09722222222222222,0,0]},{"testType":"index selector","percentages":[0.7142857142857143,1,0.7142857142857143,1]},{"testType":"name selector","percentages":[0.29411764705882354,0.29411764705882354,0.29411764705882354,1]},{"testType":"slice selector","percentages":[0.5483870967741935,0.5483870967741935,0.967741935483871,0.967741935483871]},{"testType":"functions","percentages":[0.40540540540540543,0.40540540540540543,0,0]},{"testType":"whitespace","percentages":[0,0.3333333333333333,0,0.23076923076923078]}]}